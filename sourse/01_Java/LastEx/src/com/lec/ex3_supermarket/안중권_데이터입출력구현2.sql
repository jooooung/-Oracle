-- Supermarket
DROP TABLE CUSTOMER;
DROP TABLE LEVELS;
DROP SEQUENCE CUSTOMER_CID_SQ;

CREATE TABLE LEVELS (
    LEVELNO NUMBER(3) PRIMARY KEY,
    LEVELNAME VARCHAR2(10) NOT NULL,
    LOW NUMBER(9),
    HIGH NUMBER(9)
);

CREATE TABLE CUSTOMER (
    CID NUMBER(5) PRIMARY KEY,
    CTEL VARCHAR2(50) NOT NULL,
    CNAME VARCHAR2(20) NOT NULL,
    CPOINT NUMBER(8) DEFAULT 1000,
    CAMOUNT NUMBER(9) DEFAULT 0,
    LEVELNO NUMBER(3) DEFAULT 1,
    FOREIGN KEY (LEVELNO) REFERENCES LEVELS(LEVELNO),
    CHECK(CPOINT>=0),
    CHECK(CAMOUNT>=0)
);

CREATE SEQUENCE CUSTOMER_CID_SQ MAXVALUE 99999 NOCACHE NOCYCLE;

INSERT INTO LEVELS VALUES (1, 'NORMAL', 0, 499999);
INSERT INTO LEVELS VALUES (2, 'SILVER', 500000, 999999);
INSERT INTO LEVELS VALUES (3, 'GOLD', 1000000, 1999999);
INSERT INTO LEVELS VALUES (4, 'VIP', 2000000, 2999999);
INSERT INTO LEVELS VALUES (5, 'VVIP', 3000000, 999999999);

-- 더미데이터
INSERT INTO CUSTOMER (CID, CTEL, CNAME, CAMOUNT)
    VALUES (CUSTOMER_CID_SQ.NEXTVAL, '010-3333-3333', '흥부', 100000);
INSERT INTO CUSTOMER (CID, CTEL, CNAME, CAMOUNT, LEVELNO)
    VALUES (CUSTOMER_CID_SQ.NEXTVAL, '010-3333-9999', '놀부', 10000000, 5);
    
SELECT * FROM LEVELS;
SELECT * FROM CUSTOMER;
COMMIT;

-- 1. 회원가입 (public int insertCustomer(String ctel, String cname)
INSERT INTO CUSTOMER (CID, CTEL, CNAME) 
    VALUES (CUSTOMER_CID_SQ.NEXTVAL, '010-1234-1234', '김수호');
COMMIT;

-- 2. 폰4자리(FULL) 검색 
    -- (ctel입력받아 cid, ctel, cname, cpoint, cmount, levelname, LevelUp)
    -- public ArrayList<CustomerDto> ctelGetCustomers(String searchTel)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH+1-CAMOUNT LEVELUP 
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO
    ORDER BY CAMOUNT DESC;  -- 최고 레벨도 레벨업 금액이 나와버림
    
SELECT CNAME, CAMOUNT, 
    (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) LEVELUP
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO;  -- 최고레벨이 아닌 레벨만 레벨업금액 출력 서브쿼리

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) LEVELUP
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%'||'3333' -- %3333은 ?로 변경 불가 %와 뒷자리 분리
    ORDER BY CAMOUNT DESC;  -- DAO에 들어갈 QUERY
    
-- 3. 물품구입(cid, price 입력받아 update : cpoint, camount, levelno)
    -- public int buy(int cid, int price)
    -- 1단계 : CPOINT, CAMOUNT
UPDATE CUSTOMER 
    SET CPOINT = CPOINT + (400000*0.05), CAMOUNT = CAMOUNT + 400000
    WHERE CID = 1;
    -- 2단계 : 수정된 CAMOUNT에 따라 LEVELNO 조정
SELECT CNAME, CAMOUNT, C.LEVELNO 현레벨, L.LEVELNO 바뀔레벨
    FROM CUSTOMER C, LEVELS L
    WHERE CAMOUNT BETWEEN LOW AND HIGH;
SELECT L.LEVELNO
    FROM CUSTOMER, LEVELS L
    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=1; -- CID가 1인 데이터의 바뀔레벨

UPDATE CUSTOMER 
    SET LEVELNO = (SELECT L.LEVELNO
                    FROM CUSTOMER, LEVELS L
                    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=1)
    WHERE CID=1;    -- 2단계 
    -- DAO에 들어갈 QUERY 완성
UPDATE CUSTOMER 
    SET CPOINT = CPOINT + (400000*0.05), 
        CAMOUNT = CAMOUNT + 400000,
        LEVELNO = (SELECT L.LEVELNO
                    FROM CUSTOMER, LEVELS L
                    WHERE CAMOUNT+400000 BETWEEN LOW AND HIGH 
                          AND CID=1)
    WHERE CID = 1;
    
-- 3번 후 바뀐 고객 정보 출력(cid, ctel, cname, cpointm cmount, levelname, LevelUp)
    -- public CustomerDto getCustomer(int cid)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
        (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) LEVELUP
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO
        AND CID=1;
    
-- 4번 전에 고객등급명들 추출
    -- public ArrayList<String> getLevelNames()
SELECT LEVELNAME FROM LEVELS;

-- 4. 고객 등급별 출력 
    -- (levelname을 입력받아 cid, ctel, cname, cpointm cmount, levelname, LevelUp 출력)
    -- public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
        (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) LEVELUP
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO
        AND LEVELNAME = 'VVIP'
    ORDER BY CAMOUNT DESC;
    
-- 5. 전체 출력
    -- public ArrayList<CustomerDto> getCustomers()
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
        (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) LEVELUP
    FROM CUSTOMER C, LEVELS L
    WHERE C.LEVELNO=L.LEVELNO
    ORDER BY CAMOUNT DESC;

-- 6. 회원 탈퇴
    -- ctel을 입력받아 delete
    -- public int deleteCustomer(String ctel)
DELETE FROM CUSTOMER WHERE CTEL = '010-3333-9999';
COMMIT;
select * from customer;